body{
    background: linear-gradient(180deg,#222 10%, #111 100%);
}

@font-face {
    font-family: 'Klavika';
    src: url('../fonts/Klavika-Light.otf') format('truetype');
    font-weight: 300;
}
@font-face {
    font-family: 'Klavika';
    src: url('../fonts/Klavika-Medium.otf') format('truetype');
    font-weight: bold;
}
@font-face {
    font-family: 'Klavika';
    src: url('../fonts/Klavika-Regular.otf') format('truetype');
    font-weight: normal;
}
@font-face {
    font-family: 'Rabar';
    src: url('../fonts/kurd/Rabar_015.ttf') format('truetype');
    font-weight: normal;
}
@font-face {
    font-family: 'Rabar';
    src: url('../fonts/kurd/Rabar_021.ttf') format('truetype');
    font-weight: bold;
}

.english{
    font-family: "Klavika";
}

.kurdish {
    font-family: "Rabar";
}


input[type="range"]::-webkit-slider-thumb {
    width: 15px;
    -webkit-appearance: none;
    appearance: none;
    height: 15px;
    background: #3BA676;
    box-shadow: -405px 0 0 400px #605E5C;
    border-radius: 50%;
}

.active{
    color: #3BA676;
    border-left: 2px solid #3BA676;
    padding: 0px 10px;
    font-weight: bold;
}


.hidden {
    display: none;
}

.landing-page {
    margin: 0 auto;
    padding: 0 80px;
    position: relative;
    max-width: 100%;
    width: 100%;
    min-height: 100vh;
    /*overflow-y: auto;*/
    /*overflow-x: hidden;*/
    background: linear-gradient(180deg,#222 10%, #111 100%);
}
.landing-page::before {
     content: "";
     position: absolute;
     width: 123px;
     height: 123px;
     left: 60%;
     top: 138px;
     filter: blur(90px);
     background-color: #3BA676;
 }
.landing-page::after {
     content: "";
     position: absolute;
     width: 123px;
     height: 123px;
     left: 80%;
     top: 550px;
     background-color: #3BA676;
     filter: blur(80px);
 }
@media only screen and (max-width: 1024px){
    .landing-page {
        margin: 0 auto;
        padding: 0 10px;
        background: linear-gradient(180deg,#222 10%, #111 100%);
    }
}

.square {
    width: 150px;
    max-height: 100px;
    border-radius: 8px;
    text-align: center;
    padding: 8px;
    margin-bottom: 4px;
    color: #fff;
  
    transition-property: width;
    transition-duration: 1s;
  }
  
  .square.ttf-linear {
    transition-timing-function: linear;
  }
  
  .square.ttf-ease {
    transition-timing-function: ease;
  }
  
  .square.ttf-ease-in {
    transition-timing-function: ease-in;
  }
  
  .square.ttf-ease-out {
    transition-timing-function: ease-out;
  }
  
  .square.ttf-ease-in-out {
    transition-timing-function: ease-in-out;
  }
  
  .square.ttf-steps {
    transition-timing-function: steps(3);
  }
  
  .square.ttf-cubic {
    transition-timing-function: cubic-bezier(0.68, -0.55, 0.27, 1.55);
  }
  
  .square:is(:hover, :focus) {
    width: 50%;
  }

  .rectangle {
    width: 150px;
    max-height: 100px;
    border-radius: 8px;
    text-align: center;
    padding: 8px;
    margin-bottom: 4px;
    color: #fff;
  }
  
  .rectangle:nth-child(1) {
    transition-delay: 0s;
  }
  
  .rectangle:nth-child(2) {
    transition-delay: 100ms;
  }
  
  .rectangle:nth-child(3) {
    transition-delay: 200ms;
  }
  
  .rectangle:nth-child(4) {
    transition-delay: 500ms;
  }
  
  .rectangle:nth-child(5) {
    transition-delay: 1000ms;
  }
  
  .rectangle:is(:hover, :focus) {
    background-color: transparent;
  }

  .squares {
    width: 100px;
    height: 100px;
    border-radius: 8px;
    color: #fff;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    transition-property: transform;
    transition-timing-function: ease;
    padding: 8px;
  }
  
  .squares.td-instant {
    transition-duration: 0s;
  }
  
  .squares.td-speedy {
    transition-duration: 200ms;
  }
  
  .squares.td-middling {
    transition-duration: 800ms;
  }
  
  .squares.td-glacial {
    transition-duration: 5s;
  }
  
  .squares:is(:hover, :focus) {
    transform: scale(0.8);
  }
  
  .wrapper {
    display: grid;
    grid-template-columns: 1fr 1fr;
    grid-gap: 32px;
  }
  
  .wrapper .squares:nth-child(odd) {
    justify-self: end;
  }
  
  .wrapper .squares:nth-child(even) {
    justify-self: start;
  }
    